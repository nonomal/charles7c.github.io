import{_ as t}from"./chunks/ArticleMetadata.f3b87b78.js";import{_ as c,c as r,E as y,B as A,z as l,a as i,R as D,G as C,o as p,A as B,C as F}from"./chunks/framework.23582046.js";import"./chunks/md5.3856627a.js";const E="/assets/202012291143905.208c4fe5.png",u="/assets/202012291144689.93ad3790.png",d="/assets/202012291144692.f94f8091.png",g="/assets/202012291145084.4b1012b2.png",m="/assets/202012291145312.929385f2.png",x=JSON.parse('{"title":"动态SQL","description":"","frontmatter":{"title":"动态SQL","author":"查尔斯","date":"2020/12/29 13:28","categories":["MyBatis快速入门"],"tags":["MyBatis","ORM框架"]},"headers":[],"relativePath":"courses/mybatis/01-MyBatis基础/08-动态SQL.md","filePath":"courses/mybatis/01-MyBatis基础/08-动态SQL.md","lastUpdated":1660404656000}'),q={name:"courses/mybatis/01-MyBatis基础/08-动态SQL.md"},h=l("h1",{id:"动态sql",tabindex:"-1"},[i("动态SQL "),l("a",{class:"header-anchor",href:"#动态sql","aria-label":'Permalink to "动态SQL"'},"​")],-1),f=D(`<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p><strong>C：</strong> 一晃，都来到了本系列的最后一篇了，第一篇<a href="./01-快速入门">《快速入门》</a> 中，我们曾烦恼的问题们（见下方代码），被 MyBatis 的强大能力逐个逐个的瓦解了。</p><p>我们还剩下没有攻克的问题，只有 <strong>动态参数拼接</strong> 了。但凡使用 JDBC 做过持久层开发，你应该就能理解根据不同条件拼接 SQL 语句有多痛苦，例如：拼接时要确保不能忘记添加必要的空格，还要注意去掉列表最后一个列名的逗号[1]、解决多余的 and等。</p><p>本篇我们要学习 MyBatis 的另一个强大特性：动态 SQL 元素，利用它，我们可以彻底摆脱这种痛苦。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">// 假设BaseDao已经封装了通用CRUD操作，详情见笔者《BaseDao封装JDBC通用CRUD》</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">UserDaoImpl</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">extends</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">BaseDao</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">implements</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">UserDao</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// 根据条件查询用户列表</span></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Override</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> List&lt;</span><span style="color:#F47067;">User</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#DCBDFB;">findByMap</span><span style="color:#ADBAC7;">(Map&lt;</span><span style="color:#F47067;">String</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">Object</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#F69D50;">params</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">throws</span><span style="color:#ADBAC7;"> Exception {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 动态拼接SQL语句</span></span>
<span class="line"><span style="color:#ADBAC7;">        StringBuffer</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sqlBuffer</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">StringBuffer</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 动态拼接SQL占位符参数</span></span>
<span class="line"><span style="color:#ADBAC7;">        List</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">Object</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">paramsList</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span></span>
<span class="line"><span style="color:#ADBAC7;">        sqlBuffer.</span><span style="color:#DCBDFB;">append</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot; select &quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        sqlBuffer.</span><span style="color:#DCBDFB;">append</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;   * &quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        sqlBuffer.</span><span style="color:#DCBDFB;">append</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot; from &quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        sqlBuffer.</span><span style="color:#DCBDFB;">append</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;   user &quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        sqlBuffer.</span><span style="color:#DCBDFB;">append</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot; where 1 = 1 &quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 根据用户名模糊查询</span></span>
<span class="line"><span style="color:#ADBAC7;">        Object</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">name</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> params.</span><span style="color:#DCBDFB;">get</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;name&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (EmptyUtils.</span><span style="color:#DCBDFB;">isNotEmpty</span><span style="color:#ADBAC7;">(name)) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            sqlBuffer.</span><span style="color:#DCBDFB;">append</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot; and name like CONCAT(&#39;%&#39;,?,&#39;%&#39;) &quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">            paramsList.</span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;">(name);</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 根据年龄查询</span></span>
<span class="line"><span style="color:#ADBAC7;">        Integer</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">age</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (Integer) params.</span><span style="color:#DCBDFB;">get</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;age&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (EmptyUtils.</span><span style="color:#DCBDFB;">isNotEmpty</span><span style="color:#ADBAC7;">(age)) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            sqlBuffer.</span><span style="color:#DCBDFB;">append</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot; and age = ? &quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">            paramsList.</span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;">(age);</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">selectList</span><span style="color:#ADBAC7;">(sqlBuffer.</span><span style="color:#DCBDFB;">toString</span><span style="color:#ADBAC7;">(), paramsList.</span><span style="color:#DCBDFB;">toArray</span><span style="color:#ADBAC7;">(), User.class);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// 保存用户</span></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Override</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">save</span><span style="color:#ADBAC7;">(User </span><span style="color:#F69D50;">user</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">throws</span><span style="color:#ADBAC7;"> Exception {</span></span>
<span class="line"><span style="color:#ADBAC7;">        StringBuffer</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sqlBuffer</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">StringBuffer</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">        sqlBuffer.</span><span style="color:#DCBDFB;">append</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot; insert into user &quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        sqlBuffer.</span><span style="color:#DCBDFB;">append</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot; 	(name, age, email) &quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        sqlBuffer.</span><span style="color:#DCBDFB;">append</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;  values(?, ?, ?) &quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">Object</span><span style="color:#F69D50;">[] </span><span style="color:#ADBAC7;">params</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> {user.</span><span style="color:#DCBDFB;">getName</span><span style="color:#ADBAC7;">(), user.</span><span style="color:#DCBDFB;">getAge</span><span style="color:#ADBAC7;">(), user.</span><span style="color:#DCBDFB;">getEmail</span><span style="color:#ADBAC7;">()};</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(sqlBuffer.</span><span style="color:#DCBDFB;">toString</span><span style="color:#ADBAC7;">(), params);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 假设BaseDao已经封装了通用CRUD操作，详情见笔者《BaseDao封装JDBC通用CRUD》</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UserDaoImpl</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BaseDao</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UserDao</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 根据条件查询用户列表</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">findByMap</span><span style="color:#24292E;">(Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">params</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> Exception {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 动态拼接SQL语句</span></span>
<span class="line"><span style="color:#24292E;">        StringBuffer sqlBuffer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StringBuffer</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 动态拼接SQL占位符参数</span></span>
<span class="line"><span style="color:#24292E;">        List&lt;</span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt; paramsList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">		</span></span>
<span class="line"><span style="color:#24292E;">        sqlBuffer.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; select &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        sqlBuffer.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;   * &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        sqlBuffer.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; from &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        sqlBuffer.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;   user &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        sqlBuffer.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; where 1 = 1 &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">		</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 根据用户名模糊查询</span></span>
<span class="line"><span style="color:#24292E;">        Object name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> params.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (EmptyUtils.</span><span style="color:#6F42C1;">isNotEmpty</span><span style="color:#24292E;">(name)) {</span></span>
<span class="line"><span style="color:#24292E;">            sqlBuffer.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; and name like CONCAT(&#39;%&#39;,?,&#39;%&#39;) &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            paramsList.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(name);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">		</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 根据年龄查询</span></span>
<span class="line"><span style="color:#24292E;">        Integer age </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (Integer) params.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (EmptyUtils.</span><span style="color:#6F42C1;">isNotEmpty</span><span style="color:#24292E;">(age)) {</span></span>
<span class="line"><span style="color:#24292E;">            sqlBuffer.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; and age = ? &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            paramsList.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(age);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">		</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">selectList</span><span style="color:#24292E;">(sqlBuffer.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(), paramsList.</span><span style="color:#6F42C1;">toArray</span><span style="color:#24292E;">(), User.class);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 保存用户</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">save</span><span style="color:#24292E;">(User </span><span style="color:#E36209;">user</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> Exception {</span></span>
<span class="line"><span style="color:#24292E;">        StringBuffer sqlBuffer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StringBuffer</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">        sqlBuffer.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; insert into user &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        sqlBuffer.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; 	(name, age, email) &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        sqlBuffer.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;  values(?, ?, ?) &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">		</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">[] params </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {user.</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">(), user.</span><span style="color:#6F42C1;">getAge</span><span style="color:#24292E;">(), user.</span><span style="color:#6F42C1;">getEmail</span><span style="color:#24292E;">()};</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(sqlBuffer.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(), params);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>如果你之前用过 JSTL 或任何基于类 XML 语言的文本处理器，你对动态 SQL 元素可能会感觉似曾相识。在 MyBatis 之前的版本中，需要花时间了解大量的元素。借助功能强大的基于 OGNL 的表达式，MyBatis 3 替换了之前的大部分元素，大大精简了元素种类，现在要学习的元素种类比原来的一半还要少。[1]</p><ul><li><em><strong>if</strong></em> 判断元素</li><li>choose (when, otherwise) 判断元素</li><li><strong>trim (where, set)</strong> 自动去除多余组成元素</li><li><em>foreach</em> 迭代元素</li></ul><p>上方这部分介绍，主要来自 MyBatis 官网，至于它怎么介（chui）绍（xu）自己我们不用过多关注，我们自己用了还好用才是真的。</p><h2 id="if元素" tabindex="-1">if元素 <a class="header-anchor" href="#if元素" aria-label="Permalink to &quot;if元素&quot;">​</a></h2><p>SQL 映射文件篇的时候，我们实现过一个需求：根据用户名和年龄查询用户列表。关键实现部分如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">interface</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">UserMapper</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">    /**</span></span>
<span class="line"><span style="color:#768390;">     * 根据用户名和年龄查询</span></span>
<span class="line"><span style="color:#768390;">     * </span><span style="color:#F47067;">@param</span><span style="color:#768390;"> </span><span style="color:#F69D50;">params</span><span style="color:#768390;"> 条件参数</span></span>
<span class="line"><span style="color:#768390;">     * </span><span style="color:#F47067;">@return</span><span style="color:#768390;"> 用户列表</span></span>
<span class="line"><span style="color:#768390;">     */</span></span>
<span class="line"><span style="color:#ADBAC7;">    List&lt;</span><span style="color:#F47067;">User</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#DCBDFB;">selectByMap</span><span style="color:#ADBAC7;">(Map&lt;</span><span style="color:#F47067;">String</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">Object</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#F69D50;">params</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UserMapper</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 根据用户名和年龄查询</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">params</span><span style="color:#6A737D;"> 条件参数</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> 用户列表</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">selectByMap</span><span style="color:#24292E;">(Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">params</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">&lt;!-- List&lt;User&gt; selectByMap(Map&lt;String, Object&gt; params); --&gt;</span></span>
<span class="line"><span style="color:#768390;">&lt;!-- 在 parameterType 为 Map 集合时, #{map的键名} 可以获取集合的值 --&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;selectByMap&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">parameterType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;map&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">resultType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;User&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    select</span></span>
<span class="line"><span style="color:#ADBAC7;">        * </span></span>
<span class="line"><span style="color:#ADBAC7;">    from</span></span>
<span class="line"><span style="color:#ADBAC7;">        user </span></span>
<span class="line"><span style="color:#ADBAC7;">    where </span></span>
<span class="line"><span style="color:#ADBAC7;">        name like concat(&#39;%&#39;, #{name}, &#39;%&#39;)</span></span>
<span class="line"><span style="color:#ADBAC7;">        and age = #{age}</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- List&lt;User&gt; selectByMap(Map&lt;String, Object&gt; params); --&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- 在 parameterType 为 Map 集合时, #{map的键名} 可以获取集合的值 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectByMap&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;map&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    select</span></span>
<span class="line"><span style="color:#24292E;">        * </span></span>
<span class="line"><span style="color:#24292E;">    from</span></span>
<span class="line"><span style="color:#24292E;">        user </span></span>
<span class="line"><span style="color:#24292E;">    where </span></span>
<span class="line"><span style="color:#24292E;">        name like concat(&#39;%&#39;, #{name}, &#39;%&#39;)</span></span>
<span class="line"><span style="color:#24292E;">        and age = #{age}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>如果一切如下方的传值测试，那什么问题也不会发生。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">TestMyBatis</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Test</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">testSelectByMap</span><span style="color:#ADBAC7;">() </span><span style="color:#F47067;">throws</span><span style="color:#ADBAC7;"> IOException {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 获取SqlSession对象</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">try</span><span style="color:#ADBAC7;"> (SqlSession</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sqlSession</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> MyBatisUtils.</span><span style="color:#DCBDFB;">openSession</span><span style="color:#ADBAC7;">()) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 获取 Mapper 接口</span></span>
<span class="line"><span style="color:#ADBAC7;">            UserMapper</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">userMapper</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> sqlSession.</span><span style="color:#DCBDFB;">getMapper</span><span style="color:#ADBAC7;">(UserMapper.class);</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 执行 SQL</span></span>
<span class="line"><span style="color:#ADBAC7;">            Map</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">String</span><span style="color:#F69D50;">, </span><span style="color:#F47067;">Object</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">params</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#ADBAC7;">            params.</span><span style="color:#DCBDFB;">put</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;name&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;J&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">            params.</span><span style="color:#DCBDFB;">put</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;age&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">            List</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">User</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">userList</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> userMapper.</span><span style="color:#DCBDFB;">selectByMap</span><span style="color:#ADBAC7;">(params);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 遍历数据</span></span>
<span class="line"><span style="color:#ADBAC7;">            userList.</span><span style="color:#DCBDFB;">forEach</span><span style="color:#ADBAC7;">(System.out</span><span style="color:#F47067;">::</span><span style="color:#ADBAC7;">println);</span></span>
<span class="line"><span style="color:#ADBAC7;">        } </span><span style="color:#F47067;">catch</span><span style="color:#ADBAC7;"> (Exception </span><span style="color:#F69D50;">e</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            e.</span><span style="color:#DCBDFB;">printStackTrace</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TestMyBatis</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Test</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">testSelectByMap</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> IOException {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 获取SqlSession对象</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> (SqlSession sqlSession </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MyBatisUtils.</span><span style="color:#6F42C1;">openSession</span><span style="color:#24292E;">()) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 获取 Mapper 接口</span></span>
<span class="line"><span style="color:#24292E;">            UserMapper userMapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sqlSession.</span><span style="color:#6F42C1;">getMapper</span><span style="color:#24292E;">(UserMapper.class);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 执行 SQL</span></span>
<span class="line"><span style="color:#24292E;">            Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt; params </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">            params.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;J&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            params.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            List&lt;</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; userList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userMapper.</span><span style="color:#6F42C1;">selectByMap</span><span style="color:#24292E;">(params);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 遍历数据</span></span>
<span class="line"><span style="color:#24292E;">            userList.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(System.out</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">println);</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>但是往往我们在做类似的需求时，对条件一般是可选的，即：name 和 age 参数可以传递值也可以不传递值，那么当你如是做之后，结果呢？我们在 Map 集合中去除掉 age 这个参数值试试。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">// 执行</span></span>
<span class="line"><span style="color:#ADBAC7;">Map</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">String</span><span style="color:#F69D50;">,</span><span style="color:#F47067;">Object</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">map</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> HashMap&lt;</span><span style="color:#F47067;">String</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">Object</span><span style="color:#ADBAC7;">&gt;();</span></span>
<span class="line"><span style="color:#ADBAC7;">map.</span><span style="color:#DCBDFB;">put</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;name&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;J&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">List</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">User</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">userList</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> userMapper.</span><span style="color:#DCBDFB;">selectByMap</span><span style="color:#ADBAC7;">(params);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 执行</span></span>
<span class="line"><span style="color:#24292E;">Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt; map </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt;();</span></span>
<span class="line"><span style="color:#24292E;">map.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;J&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">List&lt;</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; userList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userMapper.</span><span style="color:#6F42C1;">selectByMap</span><span style="color:#24292E;">(params);</span></span></code></pre></div><p><strong>控制台输出：</strong></p><p><img src="`+E+`" alt="202012291143905"></p><p>我们去除了 age 参数值，原本的设想是不再根据 age 列进行条件筛选，但是它还是处于生效状态，因为我们并没有添加 SQL 的条件判断， age = null 的结果显而易见是不存在的。</p><hr><p>我们来使用 if 元素改造一下吧。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">&lt;!--</span></span>
<span class="line"><span style="color:#768390;">    if元素 用于条件判断</span></span>
<span class="line"><span style="color:#768390;">        test属性：利用关系和逻辑运算符编写条件，不需要用\${}括起来</span></span>
<span class="line"><span style="color:#768390;">        注意：有些同学受到 JSTL 荼毒太深，就容易犯错 --&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;selectByMap&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">parameterType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;map&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">resultType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;User&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    select</span></span>
<span class="line"><span style="color:#ADBAC7;">        *</span></span>
<span class="line"><span style="color:#ADBAC7;">    from</span></span>
<span class="line"><span style="color:#ADBAC7;">        user</span></span>
<span class="line"><span style="color:#ADBAC7;">    where</span></span>
<span class="line"><span style="color:#ADBAC7;">        name like concat(&#39;%&#39;, #{name},&#39;%&#39;)</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;age != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            and age = #{age}</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!--</span></span>
<span class="line"><span style="color:#6A737D;">    if元素 用于条件判断</span></span>
<span class="line"><span style="color:#6A737D;">        test属性：利用关系和逻辑运算符编写条件，不需要用\${}括起来</span></span>
<span class="line"><span style="color:#6A737D;">        注意：有些同学受到 JSTL 荼毒太深，就容易犯错 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectByMap&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;map&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    select</span></span>
<span class="line"><span style="color:#24292E;">        *</span></span>
<span class="line"><span style="color:#24292E;">    from</span></span>
<span class="line"><span style="color:#24292E;">        user</span></span>
<span class="line"><span style="color:#24292E;">    where</span></span>
<span class="line"><span style="color:#24292E;">        name like concat(&#39;%&#39;, #{name},&#39;%&#39;)</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;age != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            and age = #{age}</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>执行刚才的测试代码，此次就没有任何问题了。</p><p><img src="`+u+`" alt="202012291144689"></p><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>if 元素可以说是日常开发用的最多的了，而且又简单，又好用。</p></div><h2 id="where元素" tabindex="-1">where元素 <a class="header-anchor" href="#where元素" aria-label="Permalink to &quot;where元素&quot;">​</a></h2><p>有了 if 元素的加持，如果我们只是要进行 age 这一项条件查询，那就去掉 Map 集合中的 name 参数，这时候似乎只需要在 SQL 映射文件中也给 name 条件查询加上个判断即可。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">&lt;!-- 字符串判断可以多加一个 != &#39;&#39; 空字符串的判断 --&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;selectByMap&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">parameterType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;map&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">resultType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;User&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    select</span></span>
<span class="line"><span style="color:#ADBAC7;">        *</span></span>
<span class="line"><span style="color:#ADBAC7;">    from</span></span>
<span class="line"><span style="color:#ADBAC7;">        user</span></span>
<span class="line"><span style="color:#ADBAC7;">    where</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;name != null and name != &#39;&#39;&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            name like concat(&#39;%&#39;, #{name},&#39;%&#39;)</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;age != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            and age = #{age}</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- 字符串判断可以多加一个 != &#39;&#39; 空字符串的判断 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectByMap&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;map&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    select</span></span>
<span class="line"><span style="color:#24292E;">        *</span></span>
<span class="line"><span style="color:#24292E;">    from</span></span>
<span class="line"><span style="color:#24292E;">        user</span></span>
<span class="line"><span style="color:#24292E;">    where</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;name != null and name != &#39;&#39;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            name like concat(&#39;%&#39;, #{name},&#39;%&#39;)</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;age != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            and age = #{age}</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">// 执行</span></span>
<span class="line"><span style="color:#ADBAC7;">Map</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">String</span><span style="color:#F69D50;">,</span><span style="color:#F47067;">Object</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">map</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> HashMap&lt;</span><span style="color:#F47067;">String</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">Object</span><span style="color:#ADBAC7;">&gt;();</span></span>
<span class="line"><span style="color:#ADBAC7;">map.</span><span style="color:#DCBDFB;">put</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;age&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">List</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">User</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">userList</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> userMapper.</span><span style="color:#DCBDFB;">selectByMap</span><span style="color:#ADBAC7;">(map);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 执行</span></span>
<span class="line"><span style="color:#24292E;">Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt; map </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt;();</span></span>
<span class="line"><span style="color:#24292E;">map.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">List&lt;</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; userList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userMapper.</span><span style="color:#6F42C1;">selectByMap</span><span style="color:#24292E;">(map);</span></span></code></pre></div><p>但结果并不是如此，当测试执行后，控制台报错了。</p><p><img src="`+d+`" alt="202012291144692"></p><p>但实际上，你就算不运行，你好好看看上方的 SQL 部分，就可以看出问题，它一共有可能出现4种情况。</p><ol><li>name 和 age 都传递了值，那一切都正常执行</li><li>只传递了 name 值，那么也正常</li><li><em>如果只传递了 age 值，那么就会多余一个 and 出现</em></li><li><em>如果都没有传值，那么就会多余一个 where 出现</em></li></ol><p>在之前 JDBC 开发中，我们的解决方法是添加一个 <code>where 1 = 1</code> 的恒等式。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;selectByMap&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">parameterType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;map&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">resultType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;User&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    select</span></span>
<span class="line"><span style="color:#ADBAC7;">        *</span></span>
<span class="line"><span style="color:#ADBAC7;">    from</span></span>
<span class="line"><span style="color:#ADBAC7;">        user</span></span>
<span class="line"><span style="color:#ADBAC7;">    where</span></span>
<span class="line"><span style="color:#ADBAC7;">        1 = 1</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;name != null and name != &#39;&#39;&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            and name like concat(&#39;%&#39;, #{name},&#39;%&#39;)</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;age != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            and age = #{age}</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectByMap&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;map&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    select</span></span>
<span class="line"><span style="color:#24292E;">        *</span></span>
<span class="line"><span style="color:#24292E;">    from</span></span>
<span class="line"><span style="color:#24292E;">        user</span></span>
<span class="line"><span style="color:#24292E;">    where</span></span>
<span class="line"><span style="color:#24292E;">        1 = 1</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;name != null and name != &#39;&#39;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            and name like concat(&#39;%&#39;, #{name},&#39;%&#39;)</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;age != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            and age = #{age}</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>在 MyBatis 中，准备了一个专门的元素用来解决此类问题，比添加额外的 <code>1=1</code> 语句更简单。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">&lt;!-- </span></span>
<span class="line"><span style="color:#768390;">    where 元素在执行时，会智能添加一个 where 查询关键字</span></span>
<span class="line"><span style="color:#768390;">    并且结合着 if 元素，它会自动【去除】每个 if 段内前面【多余的 and 或 or】 关键字（不会去除后面的）</span></span>
<span class="line"><span style="color:#768390;"> --&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;selectByMap&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">parameterType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;map&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">resultType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;User&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    select</span></span>
<span class="line"><span style="color:#ADBAC7;">        *</span></span>
<span class="line"><span style="color:#ADBAC7;">    from</span></span>
<span class="line"><span style="color:#ADBAC7;">        user</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">where</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;name != null and name != &#39;&#39;&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            name like concat(&#39;%&#39;, #{name},&#39;%&#39;)</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;age != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            and age = #{age}</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">where</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- </span></span>
<span class="line"><span style="color:#6A737D;">    where 元素在执行时，会智能添加一个 where 查询关键字</span></span>
<span class="line"><span style="color:#6A737D;">    并且结合着 if 元素，它会自动【去除】每个 if 段内前面【多余的 and 或 or】 关键字（不会去除后面的）</span></span>
<span class="line"><span style="color:#6A737D;"> --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectByMap&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;map&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    select</span></span>
<span class="line"><span style="color:#24292E;">        *</span></span>
<span class="line"><span style="color:#24292E;">    from</span></span>
<span class="line"><span style="color:#24292E;">        user</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">where</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;name != null and name != &#39;&#39;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            name like concat(&#39;%&#39;, #{name},&#39;%&#39;)</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;age != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            and age = #{age}</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">where</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="set元素" tabindex="-1">set元素 <a class="header-anchor" href="#set元素" aria-label="Permalink to &quot;set元素&quot;">​</a></h2><p>set 元素，和 where 元素一样也是结合 if 元素用于去除多余内容的。顾名思义，它是和 update 语句的 set 部分有关的。</p><p>我们来做一个修改示例：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">interface</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">UserMapper</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">    /**</span></span>
<span class="line"><span style="color:#768390;">     * 修改用户信息</span></span>
<span class="line"><span style="color:#768390;">     * </span><span style="color:#F47067;">@param</span><span style="color:#768390;"> </span><span style="color:#F69D50;">user</span><span style="color:#768390;"> 用户信息</span></span>
<span class="line"><span style="color:#768390;">     * </span><span style="color:#F47067;">@return</span><span style="color:#768390;"> 影响行数</span></span>
<span class="line"><span style="color:#768390;">     */</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">update</span><span style="color:#ADBAC7;">(User </span><span style="color:#F69D50;">user</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UserMapper</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 修改用户信息</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">user</span><span style="color:#6A737D;"> 用户信息</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> 影响行数</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">(User </span><span style="color:#E36209;">user</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">&lt;!-- int update(User user); --&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">update</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;update&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">parameterType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;User&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    update</span></span>
<span class="line"><span style="color:#ADBAC7;">        user</span></span>
<span class="line"><span style="color:#ADBAC7;">    set</span></span>
<span class="line"><span style="color:#ADBAC7;">        name = #{name},</span></span>
<span class="line"><span style="color:#ADBAC7;">        age = #{age},</span></span>
<span class="line"><span style="color:#ADBAC7;">        email = #{email},</span></span>
<span class="line"><span style="color:#ADBAC7;">        roleId = #{roleId}</span></span>
<span class="line"><span style="color:#ADBAC7;">    where</span></span>
<span class="line"><span style="color:#ADBAC7;">        id = #{id}</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">update</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- int update(User user); --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">update</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;update&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    update</span></span>
<span class="line"><span style="color:#24292E;">        user</span></span>
<span class="line"><span style="color:#24292E;">    set</span></span>
<span class="line"><span style="color:#24292E;">        name = #{name},</span></span>
<span class="line"><span style="color:#24292E;">        age = #{age},</span></span>
<span class="line"><span style="color:#24292E;">        email = #{email},</span></span>
<span class="line"><span style="color:#24292E;">        roleId = #{roleId}</span></span>
<span class="line"><span style="color:#24292E;">    where</span></span>
<span class="line"><span style="color:#24292E;">        id = #{id}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">update</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">TestMyBatis</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Test</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">testUpdate1</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 获取SqlSession</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">try</span><span style="color:#ADBAC7;"> (SqlSession</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sqlSession</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> MyBatisUtils.</span><span style="color:#DCBDFB;">openSession</span><span style="color:#ADBAC7;">()) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 获取Mapper</span></span>
<span class="line"><span style="color:#ADBAC7;">            UserMapper</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">userMapper</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> sqlSession.</span><span style="color:#DCBDFB;">getMapper</span><span style="color:#ADBAC7;">(UserMapper.class);</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 只想修改1号用户的名字</span></span>
<span class="line"><span style="color:#ADBAC7;">            User</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">user</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">User</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">            user.</span><span style="color:#DCBDFB;">setName</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;Charles&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">            user.</span><span style="color:#DCBDFB;">setId</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1L</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 执行</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">rows</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> userMapper.</span><span style="color:#DCBDFB;">update</span><span style="color:#ADBAC7;">(user);</span></span>
<span class="line"><span style="color:#ADBAC7;">            System.out.</span><span style="color:#DCBDFB;">println</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;影响行数为：&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> rows);</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 提交事务</span></span>
<span class="line"><span style="color:#ADBAC7;">            sqlSession.</span><span style="color:#DCBDFB;">commit</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        } </span><span style="color:#F47067;">catch</span><span style="color:#ADBAC7;"> (Exception </span><span style="color:#F69D50;">e</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            e.</span><span style="color:#DCBDFB;">printStackTrace</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TestMyBatis</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Test</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">testUpdate1</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 获取SqlSession</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> (SqlSession sqlSession </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MyBatisUtils.</span><span style="color:#6F42C1;">openSession</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">			</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 获取Mapper</span></span>
<span class="line"><span style="color:#24292E;">            UserMapper userMapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sqlSession.</span><span style="color:#6F42C1;">getMapper</span><span style="color:#24292E;">(UserMapper.class);</span></span>
<span class="line"><span style="color:#24292E;">			</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 只想修改1号用户的名字</span></span>
<span class="line"><span style="color:#24292E;">            User user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">User</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            user.</span><span style="color:#6F42C1;">setName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Charles&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            user.</span><span style="color:#6F42C1;">setId</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1L</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 执行</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> rows </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userMapper.</span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">(user);</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;影响行数为：&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> rows);</span></span>
<span class="line"><span style="color:#24292E;">			</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 提交事务</span></span>
<span class="line"><span style="color:#24292E;">            sqlSession.</span><span style="color:#6F42C1;">commit</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>执行测试后，本来我们只想修改用户名，结果却是将所有的列都清空了。</p><p><img src="`+g+'" alt="202012291145084"></p><p><img src="'+m+`" alt="202012291145312"></p><p>所以它也需要加上 if 元素来判断是否需要修改。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">update</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;update&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">parameterType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;User&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    update</span></span>
<span class="line"><span style="color:#ADBAC7;">        user</span></span>
<span class="line"><span style="color:#ADBAC7;">    set</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;name != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            name = #{name},</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;age != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            age = #{age},</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;email != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            email = #{email},</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;roleId != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            roleId = #{roleId}</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    where</span></span>
<span class="line"><span style="color:#ADBAC7;">        id = #{id}</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">update</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">update</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;update&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    update</span></span>
<span class="line"><span style="color:#24292E;">        user</span></span>
<span class="line"><span style="color:#24292E;">    set</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;name != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            name = #{name},</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;age != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            age = #{age},</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;email != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            email = #{email},</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;roleId != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            roleId = #{roleId}</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    where</span></span>
<span class="line"><span style="color:#24292E;">        id = #{id}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">update</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>但如果仅仅这样，当最后一个条件判断不成立时，那么前面的内容只要有一个传了值就会在结尾出现多余 <code>,</code> 的问题，使用 set 元素可以很容易解决该类问题。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">update</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;update&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">parameterType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;User&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    update</span></span>
<span class="line"><span style="color:#ADBAC7;">        user</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">set</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;name != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            name = #{name},</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;age != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            age = #{age},</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;nemailame != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            email = #{email},</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;roleId != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            roleId = #{roleId}</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">set</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    where</span></span>
<span class="line"><span style="color:#ADBAC7;">        id = #{id}</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">update</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">update</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;update&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    update</span></span>
<span class="line"><span style="color:#24292E;">        user</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">set</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;name != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            name = #{name},</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;age != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            age = #{age},</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;nemailame != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            email = #{email},</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;roleId != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            roleId = #{roleId}</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">set</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    where</span></span>
<span class="line"><span style="color:#24292E;">        id = #{id}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">update</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>set 元素可以智能添加一个 set 关键字，并且可以去除 if 段后面多余的 <code>,</code> 号。</p><h2 id="trim元素" tabindex="-1">trim元素 <a class="header-anchor" href="#trim元素" aria-label="Permalink to &quot;trim元素&quot;">​</a></h2><p>当我们需要灵活变更自动去除的内容时，where 和 set 就不合适了，它们是死板的，只能去除那几样。</p><p>trim 元素，看名字就知道是用来去除东西，下面我们用 trim 元素分别实现一下刚才的 where 元素和 set元素。</p><p>实现 where 元素。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">&lt;!-- </span></span>
<span class="line"><span style="color:#768390;">    trim元素，用于去除多余内容</span></span>
<span class="line"><span style="color:#768390;">        prefix：为整段内容添加一个前缀</span></span>
<span class="line"><span style="color:#768390;">        prefixOverrides：自动去除每个 if 段的多余前缀内容</span></span>
<span class="line"><span style="color:#768390;"> --&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;selectByMap&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">parameterType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;map&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">resultType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;User&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    select</span></span>
<span class="line"><span style="color:#ADBAC7;">        *</span></span>
<span class="line"><span style="color:#ADBAC7;">    from</span></span>
<span class="line"><span style="color:#ADBAC7;">        user</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">trim</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">prefix</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;where&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">prefixOverrides</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;and | or&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;name != null and name != &#39;&#39;&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            name like concat(&#39;%&#39;, #{name},&#39;%&#39;)</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;age != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            and age = #{age}</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">trim</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- </span></span>
<span class="line"><span style="color:#6A737D;">    trim元素，用于去除多余内容</span></span>
<span class="line"><span style="color:#6A737D;">        prefix：为整段内容添加一个前缀</span></span>
<span class="line"><span style="color:#6A737D;">        prefixOverrides：自动去除每个 if 段的多余前缀内容</span></span>
<span class="line"><span style="color:#6A737D;"> --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectByMap&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;map&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    select</span></span>
<span class="line"><span style="color:#24292E;">        *</span></span>
<span class="line"><span style="color:#24292E;">    from</span></span>
<span class="line"><span style="color:#24292E;">        user</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">trim</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">prefix</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;where&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">prefixOverrides</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;and | or&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;name != null and name != &#39;&#39;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            name like concat(&#39;%&#39;, #{name},&#39;%&#39;)</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;age != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            and age = #{age}</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">trim</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>实现 set 元素。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">&lt;!-- </span></span>
<span class="line"><span style="color:#768390;">    trim元素，用于去除多余内容</span></span>
<span class="line"><span style="color:#768390;">        suffix：为整段内容添加一个后缀</span></span>
<span class="line"><span style="color:#768390;">        suffixOverrides：去除每个if段后多余的内容</span></span>
<span class="line"><span style="color:#768390;"> --&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">update</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;update&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">parameterType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;User&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    update</span></span>
<span class="line"><span style="color:#ADBAC7;">        user</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">trim</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">prefix</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;set&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">suffix</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;where id = #{id}&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">suffixOverrides</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;,&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;name != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            name = #{name},</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;age != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            age = #{age},</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;email != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            email = #{email},</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;roleId != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            roleId = #{roleId}</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">if</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">trim</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">update</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- </span></span>
<span class="line"><span style="color:#6A737D;">    trim元素，用于去除多余内容</span></span>
<span class="line"><span style="color:#6A737D;">        suffix：为整段内容添加一个后缀</span></span>
<span class="line"><span style="color:#6A737D;">        suffixOverrides：去除每个if段后多余的内容</span></span>
<span class="line"><span style="color:#6A737D;"> --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">update</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;update&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    update</span></span>
<span class="line"><span style="color:#24292E;">        user</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">trim</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">prefix</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;set&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">suffix</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;where id = #{id}&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">suffixOverrides</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;name != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            name = #{name},</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;age != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            age = #{age},</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;email != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            email = #{email},</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">if</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;roleId != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            roleId = #{roleId}</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">if</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">trim</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">update</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="foreach元素" tabindex="-1">foreach元素 <a class="header-anchor" href="#foreach元素" aria-label="Permalink to &quot;foreach元素&quot;">​</a></h2><p>上方的四个元素，可以说在 SQL 映射文件中，用的最多，你把它们掌握了一般情况够用了。</p><p>但是有时候我们有一些特殊的需求，例如：下方的案例，根据角色 id 的集合来查询用户列表。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">interface</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">UserMapper</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">    /**</span></span>
<span class="line"><span style="color:#768390;">     * 根据角色集合查询用户</span></span>
<span class="line"><span style="color:#768390;">     * </span><span style="color:#F47067;">@param</span><span style="color:#768390;"> </span><span style="color:#F69D50;">roleIds</span><span style="color:#768390;"> 角色集合</span></span>
<span class="line"><span style="color:#768390;">     * </span><span style="color:#F47067;">@return</span><span style="color:#768390;"> 用户列表</span></span>
<span class="line"><span style="color:#768390;">     */</span></span>
<span class="line"><span style="color:#ADBAC7;">    List&lt;</span><span style="color:#F47067;">User</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#DCBDFB;">selectByRoleList</span><span style="color:#ADBAC7;">(List&lt;</span><span style="color:#F47067;">Long</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#F69D50;">roleIds</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UserMapper</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 根据角色集合查询用户</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">roleIds</span><span style="color:#6A737D;"> 角色集合</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> 用户列表</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">selectByRoleList</span><span style="color:#24292E;">(List&lt;</span><span style="color:#D73A49;">Long</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">roleIds</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">&lt;!-- </span></span>
<span class="line"><span style="color:#768390;">    foreach 迭代元素</span></span>
<span class="line"><span style="color:#768390;">        collection：</span></span>
<span class="line"><span style="color:#768390;">            可选值为 list（List集合）、array（数组）、Map集合的键（对应的值需要为List或Array）</span></span>
<span class="line"><span style="color:#768390;">        item：遍历出来的每一项</span></span>
<span class="line"><span style="color:#768390;">        open：在整段前添加的内容</span></span>
<span class="line"><span style="color:#768390;">        separator：遍历出来的每一项都添加什么分隔符</span></span>
<span class="line"><span style="color:#768390;">        close：在整段后添加的内容</span></span>
<span class="line"><span style="color:#768390;">--&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;selectByRoleList&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">parameterType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;long&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">resultType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;User&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    select</span></span>
<span class="line"><span style="color:#ADBAC7;">        *</span></span>
<span class="line"><span style="color:#ADBAC7;">    from</span></span>
<span class="line"><span style="color:#ADBAC7;">        user</span></span>
<span class="line"><span style="color:#ADBAC7;">    where</span></span>
<span class="line"><span style="color:#ADBAC7;">        roleId in </span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">foreach</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">collection</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;list&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">item</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;id&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">open</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;(&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">separator</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;,&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">close</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;)&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            #{id}</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">foreach</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- </span></span>
<span class="line"><span style="color:#6A737D;">    foreach 迭代元素</span></span>
<span class="line"><span style="color:#6A737D;">        collection：</span></span>
<span class="line"><span style="color:#6A737D;">            可选值为 list（List集合）、array（数组）、Map集合的键（对应的值需要为List或Array）</span></span>
<span class="line"><span style="color:#6A737D;">        item：遍历出来的每一项</span></span>
<span class="line"><span style="color:#6A737D;">        open：在整段前添加的内容</span></span>
<span class="line"><span style="color:#6A737D;">        separator：遍历出来的每一项都添加什么分隔符</span></span>
<span class="line"><span style="color:#6A737D;">        close：在整段后添加的内容</span></span>
<span class="line"><span style="color:#6A737D;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectByRoleList&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;long&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    select</span></span>
<span class="line"><span style="color:#24292E;">        *</span></span>
<span class="line"><span style="color:#24292E;">    from</span></span>
<span class="line"><span style="color:#24292E;">        user</span></span>
<span class="line"><span style="color:#24292E;">    where</span></span>
<span class="line"><span style="color:#24292E;">        roleId in </span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">foreach</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">collection</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;list&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">item</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">open</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;(&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">separator</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;)&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            #{id}</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">foreach</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>测试一下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">TestMyBatis</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Test</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">selectByRoleList</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 获取SqlSession</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">try</span><span style="color:#ADBAC7;"> (SqlSession</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sqlSession</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> MyBatisUtils.</span><span style="color:#DCBDFB;">openSession</span><span style="color:#ADBAC7;">()) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 获取Mapper</span></span>
<span class="line"><span style="color:#ADBAC7;">            UserMapper</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">userMapper</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> sqlSession.</span><span style="color:#DCBDFB;">getMapper</span><span style="color:#ADBAC7;">(UserMapper.class);</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 执行</span></span>
<span class="line"><span style="color:#ADBAC7;">            List</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">Long</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">roleIds</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Arrays.</span><span style="color:#DCBDFB;">asList</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1L</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2L</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">            List</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">User</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">userList</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> userMapper.</span><span style="color:#DCBDFB;">selectByRoleList</span><span style="color:#ADBAC7;">(roleIds);</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 遍历</span></span>
<span class="line"><span style="color:#ADBAC7;">            userList.</span><span style="color:#DCBDFB;">forEach</span><span style="color:#ADBAC7;">(System.out</span><span style="color:#F47067;">::</span><span style="color:#ADBAC7;">println);</span></span>
<span class="line"><span style="color:#ADBAC7;">        } </span><span style="color:#F47067;">catch</span><span style="color:#ADBAC7;"> (Exception </span><span style="color:#F69D50;">e</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            e.</span><span style="color:#DCBDFB;">printStackTrace</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TestMyBatis</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Test</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">selectByRoleList</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 获取SqlSession</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> (SqlSession sqlSession </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MyBatisUtils.</span><span style="color:#6F42C1;">openSession</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">			</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 获取Mapper</span></span>
<span class="line"><span style="color:#24292E;">            UserMapper userMapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sqlSession.</span><span style="color:#6F42C1;">getMapper</span><span style="color:#24292E;">(UserMapper.class);</span></span>
<span class="line"><span style="color:#24292E;">			</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 执行</span></span>
<span class="line"><span style="color:#24292E;">            List&lt;</span><span style="color:#D73A49;">Long</span><span style="color:#24292E;">&gt; roleIds </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Arrays.</span><span style="color:#6F42C1;">asList</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1L</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2L</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            List&lt;</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; userList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userMapper.</span><span style="color:#6F42C1;">selectByRoleList</span><span style="color:#24292E;">(roleIds);</span></span>
<span class="line"><span style="color:#24292E;">			</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 遍历</span></span>
<span class="line"><span style="color:#24292E;">            userList.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(System.out</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">println);</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>控制台输出：</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">-- 输出的 SQL</span></span>
<span class="line"><span style="color:#F47067;">select</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">*</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> user </span><span style="color:#F47067;">where</span><span style="color:#ADBAC7;"> roleId </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> ( ? , ? )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 输出的 SQL</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> roleId </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> ( ? , ? )</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">User [id=2, name=JSON, age=20, email=Jack@126.com]</span></span>
<span class="line"><span style="color:#adbac7;">User [id=3, name=Tom, age=28, email=Tom@126.com]</span></span>
<span class="line"><span style="color:#adbac7;">User [id=4, name=Sandy, age=21, email=Sandy@126.com]</span></span>
<span class="line"><span style="color:#adbac7;">User [id=5, name=Billie, age=24, email=Billie@126.com]</span></span>
<span class="line"><span style="color:#adbac7;">User [id=8, name=PeiQi, age=18, email=PeiQi@126.com]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">User [id=2, name=JSON, age=20, email=Jack@126.com]</span></span>
<span class="line"><span style="color:#24292e;">User [id=3, name=Tom, age=28, email=Tom@126.com]</span></span>
<span class="line"><span style="color:#24292e;">User [id=4, name=Sandy, age=21, email=Sandy@126.com]</span></span>
<span class="line"><span style="color:#24292e;">User [id=5, name=Billie, age=24, email=Billie@126.com]</span></span>
<span class="line"><span style="color:#24292e;">User [id=8, name=PeiQi, age=18, email=PeiQi@126.com]</span></span></code></pre></div><h2 id="choose元素" tabindex="-1">choose元素 <a class="header-anchor" href="#choose元素" aria-label="Permalink to &quot;choose元素&quot;">​</a></h2><p>最后我们再介绍一个应用不算太多的元素：choose，它比较类似于在 Java 中的 switch 选择结构。</p><p><strong>案例需求：查询用户列表，如果参数 name 有值那就根据 name 模糊查询，否则参数 age 有值那就根据 age 查询， 如果都没值那就查询所有角色为1的用户。</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">interface</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">UserMapper</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">    /**</span></span>
<span class="line"><span style="color:#768390;">     * 查询用户列表</span></span>
<span class="line"><span style="color:#768390;">     * 	name有值时，根据名字做模糊查询</span></span>
<span class="line"><span style="color:#768390;">     * 	否则age有值时，根据年龄等值查询</span></span>
<span class="line"><span style="color:#768390;">     * 	都没值，查询角色Id为1的用户</span></span>
<span class="line"><span style="color:#768390;">     * </span><span style="color:#F47067;">@param</span><span style="color:#768390;"> </span><span style="color:#F69D50;">user</span><span style="color:#768390;"> 查询条件</span></span>
<span class="line"><span style="color:#768390;">     * </span><span style="color:#F47067;">@return</span><span style="color:#768390;"> 用户列表</span></span>
<span class="line"><span style="color:#768390;">     */</span></span>
<span class="line"><span style="color:#ADBAC7;">    List&lt;</span><span style="color:#F47067;">User</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#DCBDFB;">selectByUser</span><span style="color:#ADBAC7;">(User </span><span style="color:#F69D50;">user</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UserMapper</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 查询用户列表</span></span>
<span class="line"><span style="color:#6A737D;">     * 	name有值时，根据名字做模糊查询</span></span>
<span class="line"><span style="color:#6A737D;">     * 	否则age有值时，根据年龄等值查询</span></span>
<span class="line"><span style="color:#6A737D;">     * 	都没值，查询角色Id为1的用户</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">user</span><span style="color:#6A737D;"> 查询条件</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> 用户列表</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">selectByUser</span><span style="color:#24292E;">(User </span><span style="color:#E36209;">user</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;selectByUser&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">parameterType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;User&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">resultType</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;User&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    select</span></span>
<span class="line"><span style="color:#ADBAC7;">        *</span></span>
<span class="line"><span style="color:#ADBAC7;">    from</span></span>
<span class="line"><span style="color:#ADBAC7;">        user</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">where</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">choose</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            &lt;</span><span style="color:#8DDB8C;">when</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;name != null and name != &#39;&#39;&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">                name like concat(&#39;%&#39;, #{name},&#39;%&#39;)</span></span>
<span class="line"><span style="color:#ADBAC7;">            &lt;/</span><span style="color:#8DDB8C;">when</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            &lt;</span><span style="color:#8DDB8C;">when</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">test</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;age != null&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">                age = #{age}</span></span>
<span class="line"><span style="color:#ADBAC7;">            &lt;/</span><span style="color:#8DDB8C;">when</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            &lt;</span><span style="color:#8DDB8C;">otherwise</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">                roleId = 1</span></span>
<span class="line"><span style="color:#ADBAC7;">            &lt;/</span><span style="color:#8DDB8C;">otherwise</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">choose</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">where</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">select</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectByUser&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;User&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    select</span></span>
<span class="line"><span style="color:#24292E;">        *</span></span>
<span class="line"><span style="color:#24292E;">    from</span></span>
<span class="line"><span style="color:#24292E;">        user</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">where</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">choose</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">when</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;name != null and name != &#39;&#39;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                name like concat(&#39;%&#39;, #{name},&#39;%&#39;)</span></span>
<span class="line"><span style="color:#24292E;">            &lt;/</span><span style="color:#22863A;">when</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">when</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;age != null&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                age = #{age}</span></span>
<span class="line"><span style="color:#24292E;">            &lt;/</span><span style="color:#22863A;">when</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">otherwise</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                roleId = 1</span></span>
<span class="line"><span style="color:#24292E;">            &lt;/</span><span style="color:#22863A;">otherwise</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">choose</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">where</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>测试一下，如果同时传了 name 和 age的值。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Test</span></span>
<span class="line"><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">testSelectByUser</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">try</span><span style="color:#ADBAC7;"> (SqlSession</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sqlSession</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> MyBatisUtils.</span><span style="color:#DCBDFB;">openSession</span><span style="color:#ADBAC7;">()){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">        UserMapper</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">userMapper</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> sqlSession.</span><span style="color:#DCBDFB;">getMapper</span><span style="color:#ADBAC7;">(UserMapper.class);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">        User</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">user</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">User</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        user.</span><span style="color:#DCBDFB;">setName</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;T&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        user.</span><span style="color:#DCBDFB;">setAge</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        List</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">User</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">userList</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> userMapper.</span><span style="color:#DCBDFB;">selectByUser</span><span style="color:#ADBAC7;">(user);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">        userList.</span><span style="color:#DCBDFB;">forEach</span><span style="color:#ADBAC7;">(System.out</span><span style="color:#F47067;">::</span><span style="color:#ADBAC7;">println);</span></span>
<span class="line"><span style="color:#ADBAC7;">    } </span><span style="color:#F47067;">catch</span><span style="color:#ADBAC7;"> (Exception </span><span style="color:#F69D50;">e</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        e.</span><span style="color:#DCBDFB;">printStackTrace</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Test</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">testSelectByUser</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> (SqlSession sqlSession </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MyBatisUtils.</span><span style="color:#6F42C1;">openSession</span><span style="color:#24292E;">()){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        UserMapper userMapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sqlSession.</span><span style="color:#6F42C1;">getMapper</span><span style="color:#24292E;">(UserMapper.class);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        User user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">User</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        user.</span><span style="color:#6F42C1;">setName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;T&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        user.</span><span style="color:#6F42C1;">setAge</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        List&lt;</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; userList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userMapper.</span><span style="color:#6F42C1;">selectByUser</span><span style="color:#24292E;">(user);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        userList.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(System.out</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">println);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>控制台输出：</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">-- 输出的 SQL</span></span>
<span class="line"><span style="color:#F47067;">select</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">*</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> user </span><span style="color:#F47067;">WHERE</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">name</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">like</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">concat</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;%&#39;</span><span style="color:#ADBAC7;">, ?,</span><span style="color:#96D0FF;">&#39;%&#39;</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 输出的 SQL</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">like</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">concat</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;%&#39;</span><span style="color:#24292E;">, ?,</span><span style="color:#032F62;">&#39;%&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>测试一下，如果只传了 age 的值。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Test</span></span>
<span class="line"><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">testSelectByUser</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">try</span><span style="color:#ADBAC7;"> (SqlSession</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sqlSession</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> MyBatisUtils.</span><span style="color:#DCBDFB;">openSession</span><span style="color:#ADBAC7;">()){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">        UserMapper</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">userMapper</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> sqlSession.</span><span style="color:#DCBDFB;">getMapper</span><span style="color:#ADBAC7;">(UserMapper.class);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">        User</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">user</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">User</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        user.</span><span style="color:#DCBDFB;">setAge</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        List</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">User</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">userList</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> userMapper.</span><span style="color:#DCBDFB;">selectByUser</span><span style="color:#ADBAC7;">(user);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">        userList.</span><span style="color:#DCBDFB;">forEach</span><span style="color:#ADBAC7;">(System.out</span><span style="color:#F47067;">::</span><span style="color:#ADBAC7;">println);</span></span>
<span class="line"><span style="color:#ADBAC7;">    } </span><span style="color:#F47067;">catch</span><span style="color:#ADBAC7;"> (Exception </span><span style="color:#F69D50;">e</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        e.</span><span style="color:#DCBDFB;">printStackTrace</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Test</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">testSelectByUser</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> (SqlSession sqlSession </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MyBatisUtils.</span><span style="color:#6F42C1;">openSession</span><span style="color:#24292E;">()){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        UserMapper userMapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sqlSession.</span><span style="color:#6F42C1;">getMapper</span><span style="color:#24292E;">(UserMapper.class);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        User user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">User</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        user.</span><span style="color:#6F42C1;">setAge</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        List&lt;</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; userList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userMapper.</span><span style="color:#6F42C1;">selectByUser</span><span style="color:#24292E;">(user);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        userList.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(System.out</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">println);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>控制台输出：</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">-- 输出的 SQL</span></span>
<span class="line"><span style="color:#F47067;">select</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">*</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> user </span><span style="color:#F47067;">WHERE</span><span style="color:#ADBAC7;"> age </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> ?</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 输出的 SQL</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> age </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ?</span></span></code></pre></div><p>测试一下，如果什么值都没传。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Test</span></span>
<span class="line"><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">testSelectByUser</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">try</span><span style="color:#ADBAC7;"> (SqlSession</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sqlSession</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> MyBatisUtils.</span><span style="color:#DCBDFB;">openSession</span><span style="color:#ADBAC7;">()){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">        UserMapper</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">userMapper</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> sqlSession.</span><span style="color:#DCBDFB;">getMapper</span><span style="color:#ADBAC7;">(UserMapper.class);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">        List</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">User</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">userList</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> userMapper.</span><span style="color:#DCBDFB;">selectByUser</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">        userList.</span><span style="color:#DCBDFB;">forEach</span><span style="color:#ADBAC7;">(System.out</span><span style="color:#F47067;">::</span><span style="color:#ADBAC7;">println);</span></span>
<span class="line"><span style="color:#ADBAC7;">    } </span><span style="color:#F47067;">catch</span><span style="color:#ADBAC7;"> (Exception </span><span style="color:#F69D50;">e</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        e.</span><span style="color:#DCBDFB;">printStackTrace</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Test</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">testSelectByUser</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> (SqlSession sqlSession </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MyBatisUtils.</span><span style="color:#6F42C1;">openSession</span><span style="color:#24292E;">()){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        UserMapper userMapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sqlSession.</span><span style="color:#6F42C1;">getMapper</span><span style="color:#24292E;">(UserMapper.class);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        List&lt;</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; userList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userMapper.</span><span style="color:#6F42C1;">selectByUser</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        userList.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(System.out</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">println);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>控制台输出：</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">-- 输出的 SQL</span></span>
<span class="line"><span style="color:#F47067;">select</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">*</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> user </span><span style="color:#F47067;">WHERE</span><span style="color:#ADBAC7;"> roleId </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 输出的 SQL</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> roleId </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>效果很明显了，自上而下进行条件判断，只要其中一个满足，后面的条件就不再执行。这就是 switch 的机制。</p></div><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-label="Permalink to &quot;参考文献&quot;">​</a></h2><p>[1]MyBatis 官网. 动态 SQL[EB/OL]. <a href="https://mybatis.org/mybatis-3/zh/dynamic-sql.html" target="_blank" rel="noreferrer">https://mybatis.org/mybatis-3/zh/dynamic-sql.html</a>. 2020-12-28</p><h2 id="后记" tabindex="-1">后记 <a class="header-anchor" href="#后记" aria-label="Permalink to &quot;后记&quot;">​</a></h2><p>《初识MyBatis》 系列到本篇就结束了，笔者的更文速度，你还能追的上吗？😄</p><p>其实这不过是因为笔者有存稿而已，否则哪那么快，每篇文章在最初时都花费了大量的时间，在存稿基础上再来发表又花费了不短时间，所以真没什么产出速度，大概比一些&quot;临近太监的网文&quot;的作者快点？</p><p>这个系列结束，不代表 MyBatis 系列就完全结束了，后续笔者会再次抽时间开放 MyBatis 新的系列 《MyBatis原理》，当然这可能需要一段时间，因为笔者最近在忙另一个系列。但愿那时候还在关注的你，依然保持有对 MyBatis 热爱、研究的心。💝</p><div class="info custom-block"><p class="custom-block-title">笔者说</p><p>对于技术的学习，笔者一贯遵循的步骤是：先用最最简单的 demo 让它跑起来，然后学学它的最最常用 API 和 配置让自己能用起来，最后熟练使用的基础上，在空闲时尝试阅读它的源码让自己能够洞彻它的运行机制，部分问题出现的原因，同时借鉴这些技术实现来提升自己的代码高度。</p><p>所以在笔者的文章中，前期基本都是小白文，仅仅穿插很少量的源码研究。当然等小白文更新多了，你们还依然喜欢，后期会不定时专门对部分技术的源码进行解析。</p></div>`,93);function v(s,b,S,k,M,U){const o=t,e=C("ClientOnly");return p(),r("div",null,[h,y(e,null,{default:A(()=>{var n,a;return[(((n=s.$frontmatter)==null?void 0:n.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(p(),B(o,{key:0,article:s.$frontmatter},null,8,["article"])):F("",!0)]}),_:1}),f])}const I=c(q,[["render",v]]);export{x as __pageData,I as default};
